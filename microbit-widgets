from microbit import *
import music

# Variables
module  = 1
modules = 4

# Inputs
def on_button_pressed_a():
    global module
    if module >= 2:
        module -= 1
button_a(on_button_pressed_a)

def on_button_pressed_b():
    global module, modules
    if module <= modules:
        module += 1
button_b(on_button_pressed_b)


while True:
    # Temperature
    while module == 1:
        display.show(temperature())

    # Compass
    while module == 2:
        if compass.heading() >= 330 and compass.heading() < 30:
            display.show_arrow(Image.ARROW_N)
        elif compass.heading() >= 30 and compass.heading() < 60:
            display.show_arrow(Image.ARROW_NE)
        elif compass.heading() >= 60 and compass.heading() < 120:
            display.show_arrow(Image.ARROW_E)
        elif compass.heading() >= 120 and compass.heading() < 150:
            display.show_arrow(Image.ARROW_SE)
        elif compass.heading() >= 150 and compass.heading() < 210:
            display.show_arrow(Image.ARROW_S)
        elif compass.heading() >= 210 and compass.heading() < 240:
            display.show_arrow(Image.ARROW_SW)
        elif compass.heading() >= 240 and compass.heading() < 300:
            display.show_arrow(Image.ARROW_W)
        elif compass.heading() >= 300 and compass.heading() < 330:
            display.show_arrow(Image.ARROW_NW)
        else:
            display.show_arrow(Image.ARROW_N)

    # Dice
    while module == 3:
        display.show(0)
        display.clear_screen()
        def on_gesture_shake():
            display.show(randint(0,6))
        input.on_gesture(Gesture.SHAKE, on_gesture_shake)

    # Rick roll
    while module == 4:
        display.show_icon(IconNames.EIGTH_NOTE)
        music.set_built_in_speaker_enabled(True)
        music.set_tempo(114)
        music.play_tone(262, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(294, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(196, music.beat(BeatFraction.HALF))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(294, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(330, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(392, music.beat(BeatFraction.QUARTER))
        music.play_tone(349, music.beat(BeatFraction.QUARTER))
        music.play_tone(330, music.beat(BeatFraction.QUARTER))
        music.play_tone(262, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(294, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.HALF))
        music.play_tone(196, music.beat(BeatFraction.WHOLE))
        music.rest(music.beat(BeatFraction.DOUBLE))
        music.rest(music.beat(BeatFraction.WHOLE))